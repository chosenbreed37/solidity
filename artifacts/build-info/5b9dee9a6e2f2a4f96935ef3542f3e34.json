{
	"id": "5b9dee9a6e2f2a4f96935ef3542f3e34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"elections.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >= 0.7.0 <0.9.0;\r\n\r\ncontract Elections {\r\n    enum Candidate { C1, C2, C3 }\r\n    mapping(address=>bool) private approvedVoters;\r\n    mapping(Candidate=>uint) private votes;\r\n    bytes32 private hashedResult;\r\n\r\n    modifier isApproved() {\r\n        require(approvedVoters[msg.sender] == true);\r\n    _   ;\r\n    }\r\n\r\n    function vote(Candidate candidate) public payable isApproved {\r\n        votes[candidate]=votes[candidate]+1;\r\n    }\r\n\r\n    function getResults() public returns(Candidate, uint){\r\n        uint votesForC1 = votes[Candidate.C1];\r\n        uint votesForC2 = votes[Candidate.C2];\r\n        uint votesForC3 = votes[Candidate.C3];\r\n\r\n        Candidate winner = Candidate.C1;\r\n        uint winningVotes = votesForC1;\r\n\r\n        if (votesForC2 > winningVotes) {\r\n            winner = Candidate.C2;\r\n            winningVotes = votesForC2;\r\n        }\r\n        if (votesForC3 > winningVotes) {\r\n            winner = Candidate.C3;\r\n            winningVotes = votesForC3;\r\n        }\r\n\r\n        hashedResult = keccak256(abi.encode(winner, winningVotes));\r\n        return (winner, winningVotes);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"elections.sol": {
				"Elections": {
					"abi": [
						{
							"inputs": [],
							"name": "getResults",
							"outputs": [
								{
									"internalType": "enum Elections.Candidate",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Elections.Candidate",
									"name": "candidate",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"elections.sol\":75:1160  contract Elections {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"elections.sol\":75:1160  contract Elections {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4717f97c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"elections.sol\":496:1157  function getResults() public returns(Candidate, uint){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      revert(0x00, 0x00)\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap3\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"elections.sol\":373:488  function vote(Candidate candidate) public payable isApproved {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"elections.sol\":496:1157  function getResults() public returns(Candidate, uint){... */\n    tag_6:\n        /* \"elections.sol\":533:542  Candidate */\n      0x00\n        /* \"elections.sol\":544:548  uint */\n      0x00\n        /* \"elections.sol\":560:575  uint votesForC1 */\n      0x00\n        /* \"elections.sol\":578:583  votes */\n      0x01\n        /* \"elections.sol\":578:597  votes[Candidate.C1] */\n      0x00\n        /* \"elections.sol\":584:596  Candidate.C1 */\n      0x00\n        /* \"elections.sol\":578:597  votes[Candidate.C1] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_17\n      jumpi\n      tag_18\n      tag_16\n      jump\t// in\n    tag_18:\n    tag_17:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"elections.sol\":560:597  uint votesForC1 = votes[Candidate.C1] */\n      swap1\n      pop\n        /* \"elections.sol\":608:623  uint votesForC2 */\n      0x00\n        /* \"elections.sol\":626:631  votes */\n      0x01\n        /* \"elections.sol\":626:645  votes[Candidate.C2] */\n      0x00\n        /* \"elections.sol\":632:644  Candidate.C2 */\n      0x01\n        /* \"elections.sol\":626:645  votes[Candidate.C2] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      tag_20\n      tag_16\n      jump\t// in\n    tag_20:\n    tag_19:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      tag_22\n      tag_16\n      jump\t// in\n    tag_22:\n    tag_21:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"elections.sol\":608:645  uint votesForC2 = votes[Candidate.C2] */\n      swap1\n      pop\n        /* \"elections.sol\":656:671  uint votesForC3 */\n      0x00\n        /* \"elections.sol\":674:679  votes */\n      0x01\n        /* \"elections.sol\":674:693  votes[Candidate.C3] */\n      0x00\n        /* \"elections.sol\":680:692  Candidate.C3 */\n      0x02\n        /* \"elections.sol\":674:693  votes[Candidate.C3] */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      tag_24\n      tag_16\n      jump\t// in\n    tag_24:\n    tag_23:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      tag_26\n      tag_16\n      jump\t// in\n    tag_26:\n    tag_25:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"elections.sol\":656:693  uint votesForC3 = votes[Candidate.C3] */\n      swap1\n      pop\n        /* \"elections.sol\":706:722  Candidate winner */\n      0x00\n        /* \"elections.sol\":725:737  Candidate.C1 */\n      0x00\n        /* \"elections.sol\":706:737  Candidate winner = Candidate.C1 */\n      swap1\n      pop\n        /* \"elections.sol\":748:765  uint winningVotes */\n      0x00\n        /* \"elections.sol\":768:778  votesForC1 */\n      dup5\n        /* \"elections.sol\":748:778  uint winningVotes = votesForC1 */\n      swap1\n      pop\n        /* \"elections.sol\":808:820  winningVotes */\n      dup1\n        /* \"elections.sol\":795:805  votesForC2 */\n      dup5\n        /* \"elections.sol\":795:820  votesForC2 > winningVotes */\n      gt\n        /* \"elections.sol\":791:910  if (votesForC2 > winningVotes) {... */\n      iszero\n      tag_27\n      jumpi\n        /* \"elections.sol\":846:858  Candidate.C2 */\n      0x01\n        /* \"elections.sol\":837:858  winner = Candidate.C2 */\n      swap2\n      pop\n        /* \"elections.sol\":888:898  votesForC2 */\n      dup4\n        /* \"elections.sol\":873:898  winningVotes = votesForC2 */\n      swap1\n      pop\n        /* \"elections.sol\":791:910  if (votesForC2 > winningVotes) {... */\n    tag_27:\n        /* \"elections.sol\":937:949  winningVotes */\n      dup1\n        /* \"elections.sol\":924:934  votesForC3 */\n      dup4\n        /* \"elections.sol\":924:949  votesForC3 > winningVotes */\n      gt\n        /* \"elections.sol\":920:1039  if (votesForC3 > winningVotes) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"elections.sol\":975:987  Candidate.C3 */\n      0x02\n        /* \"elections.sol\":966:987  winner = Candidate.C3 */\n      swap2\n      pop\n        /* \"elections.sol\":1017:1027  votesForC3 */\n      dup3\n        /* \"elections.sol\":1002:1027  winningVotes = votesForC3 */\n      swap1\n      pop\n        /* \"elections.sol\":920:1039  if (votesForC3 > winningVotes) {... */\n    tag_28:\n        /* \"elections.sol\":1087:1093  winner */\n      dup2\n        /* \"elections.sol\":1095:1107  winningVotes */\n      dup2\n        /* \"elections.sol\":1076:1108  abi.encode(winner, winningVotes) */\n      add(0x20, mload(0x40))\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"elections.sol\":1066:1109  keccak256(abi.encode(winner, winningVotes)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"elections.sol\":1051:1063  hashedResult */\n      0x02\n        /* \"elections.sol\":1051:1109  hashedResult = keccak256(abi.encode(winner, winningVotes)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"elections.sol\":1128:1134  winner */\n      dup2\n        /* \"elections.sol\":1136:1148  winningVotes */\n      dup2\n        /* \"elections.sol\":1120:1149  return (winner, winningVotes) */\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"elections.sol\":496:1157  function getResults() public returns(Candidate, uint){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"elections.sol\":373:488  function vote(Candidate candidate) public payable isApproved {... */\n    tag_12:\n        /* \"elections.sol\":341:345  true */\n      0x01\n        /* \"elections.sol\":311:345  approvedVoters[msg.sender] == true */\n      iszero\n      iszero\n        /* \"elections.sol\":311:325  approvedVoters */\n      0x00\n        /* \"elections.sol\":311:337  approvedVoters[msg.sender] */\n      0x00\n        /* \"elections.sol\":326:336  msg.sender */\n      caller\n        /* \"elections.sol\":311:337  approvedVoters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"elections.sol\":311:345  approvedVoters[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"elections.sol\":303:346  require(approvedVoters[msg.sender] == true) */\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n        /* \"elections.sol\":479:480  1 */\n      0x01\n        /* \"elections.sol\":462:467  votes */\n      dup1\n        /* \"elections.sol\":462:478  votes[candidate] */\n      0x00\n        /* \"elections.sol\":468:477  candidate */\n      dup4\n        /* \"elections.sol\":462:478  votes[candidate] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      tag_34\n      tag_16\n      jump\t// in\n    tag_34:\n    tag_33:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_36\n      tag_16\n      jump\t// in\n    tag_36:\n    tag_35:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"elections.sol\":462:480  votes[candidate]+1 */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"elections.sol\":445:450  votes */\n      0x01\n        /* \"elections.sol\":445:461  votes[candidate] */\n      0x00\n        /* \"elections.sol\":451:460  candidate */\n      dup4\n        /* \"elections.sol\":445:461  votes[candidate] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      tag_40\n      tag_16\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      tag_42\n      tag_16\n      jump\t// in\n    tag_42:\n    tag_41:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"elections.sol\":445:480  votes[candidate]=votes[candidate]+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"elections.sol\":373:488  function vote(Candidate candidate) public payable isApproved {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_16:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:309   */\n    tag_43:\n        /* \"#utility.yul\":277:278   */\n      0x03\n        /* \"#utility.yul\":270:275   */\n      dup2\n        /* \"#utility.yul\":267:279   */\n      lt\n        /* \"#utility.yul\":257:303   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":283:301   */\n      tag_59\n      tag_16\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":257:303   */\n    tag_58:\n        /* \"#utility.yul\":193:309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":315:448   */\n    tag_44:\n        /* \"#utility.yul\":363:370   */\n      0x00\n        /* \"#utility.yul\":392:397   */\n      dup2\n        /* \"#utility.yul\":381:397   */\n      swap1\n      pop\n        /* \"#utility.yul\":398:442   */\n      tag_61\n        /* \"#utility.yul\":436:441   */\n      dup3\n        /* \"#utility.yul\":398:442   */\n      tag_43\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":315:448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":454:587   */\n    tag_45:\n        /* \"#utility.yul\":513:522   */\n      0x00\n        /* \"#utility.yul\":546:581   */\n      tag_63\n        /* \"#utility.yul\":575:580   */\n      dup3\n        /* \"#utility.yul\":546:581   */\n      tag_44\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":533:581   */\n      swap1\n      pop\n        /* \"#utility.yul\":454:587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:742   */\n    tag_46:\n        /* \"#utility.yul\":689:735   */\n      tag_65\n        /* \"#utility.yul\":729:734   */\n      dup2\n        /* \"#utility.yul\":689:735   */\n      tag_45\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":684:687   */\n      dup3\n        /* \"#utility.yul\":677:736   */\n      mstore\n        /* \"#utility.yul\":593:742   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":748:825   */\n    tag_47:\n        /* \"#utility.yul\":785:792   */\n      0x00\n        /* \"#utility.yul\":814:819   */\n      dup2\n        /* \"#utility.yul\":803:819   */\n      swap1\n      pop\n        /* \"#utility.yul\":748:825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":831:949   */\n    tag_48:\n        /* \"#utility.yul\":918:942   */\n      tag_68\n        /* \"#utility.yul\":936:941   */\n      dup2\n        /* \"#utility.yul\":918:942   */\n      tag_47\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":913:916   */\n      dup3\n        /* \"#utility.yul\":906:943   */\n      mstore\n        /* \"#utility.yul\":831:949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":955:1305   */\n    tag_8:\n        /* \"#utility.yul\":1085:1089   */\n      0x00\n        /* \"#utility.yul\":1123:1125   */\n      0x40\n        /* \"#utility.yul\":1112:1121   */\n      dup3\n        /* \"#utility.yul\":1108:1126   */\n      add\n        /* \"#utility.yul\":1100:1126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1136:1216   */\n      tag_70\n        /* \"#utility.yul\":1213:1214   */\n      0x00\n        /* \"#utility.yul\":1202:1211   */\n      dup4\n        /* \"#utility.yul\":1198:1215   */\n      add\n        /* \"#utility.yul\":1189:1195   */\n      dup6\n        /* \"#utility.yul\":1136:1216   */\n      tag_46\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1226:1298   */\n      tag_71\n        /* \"#utility.yul\":1294:1296   */\n      0x20\n        /* \"#utility.yul\":1283:1292   */\n      dup4\n        /* \"#utility.yul\":1279:1297   */\n      add\n        /* \"#utility.yul\":1270:1276   */\n      dup5\n        /* \"#utility.yul\":1226:1298   */\n      tag_48\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":955:1305   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1392:1509   */\n    tag_50:\n        /* \"#utility.yul\":1501:1502   */\n      0x00\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1491:1503   */\n      revert\n        /* \"#utility.yul\":1638:1748   */\n    tag_52:\n        /* \"#utility.yul\":1722:1723   */\n      0x03\n        /* \"#utility.yul\":1715:1720   */\n      dup2\n        /* \"#utility.yul\":1712:1724   */\n      lt\n        /* \"#utility.yul\":1702:1742   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1735:1736   */\n      0x00\n        /* \"#utility.yul\":1728:1740   */\n      revert\n        /* \"#utility.yul\":1702:1742   */\n    tag_76:\n        /* \"#utility.yul\":1638:1748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:1915   */\n    tag_53:\n        /* \"#utility.yul\":1811:1816   */\n      0x00\n        /* \"#utility.yul\":1849:1855   */\n      dup2\n        /* \"#utility.yul\":1836:1856   */\n      calldataload\n        /* \"#utility.yul\":1827:1856   */\n      swap1\n      pop\n        /* \"#utility.yul\":1865:1909   */\n      tag_78\n        /* \"#utility.yul\":1903:1908   */\n      dup2\n        /* \"#utility.yul\":1865:1909   */\n      tag_52\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1754:1915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1921:2272   */\n    tag_11:\n        /* \"#utility.yul\":1991:1997   */\n      0x00\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2028:2037   */\n      dup3\n        /* \"#utility.yul\":2019:2026   */\n      dup5\n        /* \"#utility.yul\":2015:2038   */\n      sub\n        /* \"#utility.yul\":2011:2043   */\n      slt\n        /* \"#utility.yul\":2008:2127   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2046:2125   */\n      tag_81\n      tag_50\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2008:2127   */\n    tag_80:\n        /* \"#utility.yul\":2166:2167   */\n      0x00\n        /* \"#utility.yul\":2191:2255   */\n      tag_82\n        /* \"#utility.yul\":2247:2254   */\n      dup5\n        /* \"#utility.yul\":2238:2244   */\n      dup3\n        /* \"#utility.yul\":2227:2236   */\n      dup6\n        /* \"#utility.yul\":2223:2245   */\n      add\n        /* \"#utility.yul\":2191:2255   */\n      tag_53\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2181:2255   */\n      swap2\n      pop\n        /* \"#utility.yul\":2137:2265   */\n      pop\n        /* \"#utility.yul\":1921:2272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2278:2458   */\n    tag_54:\n        /* \"#utility.yul\":2326:2403   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2323:2324   */\n      0x00\n        /* \"#utility.yul\":2316:2404   */\n      mstore\n        /* \"#utility.yul\":2423:2427   */\n      0x11\n        /* \"#utility.yul\":2420:2421   */\n      0x04\n        /* \"#utility.yul\":2413:2428   */\n      mstore\n        /* \"#utility.yul\":2447:2451   */\n      0x24\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2437:2452   */\n      revert\n        /* \"#utility.yul\":2464:2655   */\n    tag_38:\n        /* \"#utility.yul\":2504:2507   */\n      0x00\n        /* \"#utility.yul\":2523:2543   */\n      tag_85\n        /* \"#utility.yul\":2541:2542   */\n      dup3\n        /* \"#utility.yul\":2523:2543   */\n      tag_47\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2518:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2557:2577   */\n      tag_86\n        /* \"#utility.yul\":2575:2576   */\n      dup4\n        /* \"#utility.yul\":2557:2577   */\n      tag_47\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2552:2577   */\n      swap3\n      pop\n        /* \"#utility.yul\":2600:2601   */\n      dup3\n        /* \"#utility.yul\":2597:2598   */\n      dup3\n        /* \"#utility.yul\":2593:2602   */\n      add\n        /* \"#utility.yul\":2586:2602   */\n      swap1\n      pop\n        /* \"#utility.yul\":2621:2624   */\n      dup1\n        /* \"#utility.yul\":2618:2619   */\n      dup3\n        /* \"#utility.yul\":2615:2625   */\n      gt\n        /* \"#utility.yul\":2612:2648   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2628:2646   */\n      tag_88\n      tag_54\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2612:2648   */\n    tag_87:\n        /* \"#utility.yul\":2464:2655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205311b4054bbcc51d1afffb7f34090e8ead0889e192287c6439432c6a595c11b464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506103f68061001c5f395ff3fe608060405260043610610028575f3560e01c80634717f97c1461002c578063b3f98adc14610057575b5f5ffd5b348015610037575f5ffd5b50610040610073565b60405161004e9291906102e7565b60405180910390f35b610071600480360381019061006c9190610335565b610187565b005b5f5f5f60015f5f600281111561008c5761008b61025c565b5b600281111561009e5761009d61025c565b5b81526020019081526020015f205490505f60015f600160028111156100c6576100c561025c565b5b60028111156100d8576100d761025c565b5b81526020019081526020015f205490505f60015f6002808111156100ff576100fe61025c565b5b60028111156101115761011061025c565b5b81526020019081526020015f205490505f5f90505f8490508084111561013957600191508390505b8083111561014957600291508290505b818160405160200161015c9291906102e7565b6040516020818303038152906040528051906020012060028190555081819650965050505050509091565b600115155f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515146101df575f5ffd5b6001805f8360028111156101f6576101f561025c565b5b60028111156102085761020761025c565b5b81526020019081526020015f2054610220919061038d565b60015f8360028111156102365761023561025c565b5b60028111156102485761024761025c565b5b81526020019081526020015f208190555050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6003811061029a5761029961025c565b5b50565b5f8190506102aa82610289565b919050565b5f6102b98261029d565b9050919050565b6102c9816102af565b82525050565b5f819050919050565b6102e1816102cf565b82525050565b5f6040820190506102fa5f8301856102c0565b61030760208301846102d8565b9392505050565b5f5ffd5b6003811061031e575f5ffd5b50565b5f8135905061032f81610312565b92915050565b5f6020828403121561034a5761034961030e565b5b5f61035784828501610321565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610397826102cf565b91506103a2836102cf565b92508282019050808211156103ba576103b9610360565b5b9291505056fea26469706673582212205311b4054bbcc51d1afffb7f34090e8ead0889e192287c6439432c6a595c11b464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4717F97C EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E SWAP3 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x1 PUSH0 PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8C JUMPI PUSH2 0x8B PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9E JUMPI PUSH2 0x9D PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC6 JUMPI PUSH2 0xC5 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x111 JUMPI PUSH2 0x110 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 DUP5 SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x139 JUMPI PUSH1 0x1 SWAP2 POP DUP4 SWAP1 POP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x149 JUMPI PUSH1 0x2 SWAP2 POP DUP3 SWAP1 POP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15C SWAP3 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 DUP2 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x236 JUMPI PUSH2 0x235 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x248 JUMPI PUSH2 0x247 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x25C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2AA DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9 DUP3 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x2AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1 DUP2 PUSH2 0x2CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FA PUSH0 DUP4 ADD DUP6 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x31E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32F DUP2 PUSH2 0x312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0x30E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x357 DUP5 DUP3 DUP6 ADD PUSH2 0x321 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x397 DUP3 PUSH2 0x2CF JUMP JUMPDEST SWAP2 POP PUSH2 0x3A2 DUP4 PUSH2 0x2CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x360 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 GT 0xB4 SDIV 0x4B 0xBC 0xC5 SAR BYTE SELFDESTRUCT EXTSTATICCALL PUSH32 0x34090E8EAD0889E192287C6439432C6A595C11B464736F6C634300081E003300 ",
							"sourceMap": "75:1085:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getResults_130": {
									"entryPoint": 115,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@vote_48": {
									"entryPoint": 391,
									"id": 48,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_enum$_Candidate_$5": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_Candidate_$5": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_Candidate_$5_to_t_uint8_fromStack": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_Candidate_$5_t_uint256__to_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Candidate_$5": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Candidate_$5_to_t_uint8": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Candidate_$5": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Candidate_$5": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2658:1",
										"nodeType": "YulBlock",
										"src": "0:2658:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nativeSrc": "247:62:1",
													"nodeType": "YulBlock",
													"src": "247:62:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "281:22:1",
																"nodeType": "YulBlock",
																"src": "281:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "283:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "283:16:1"
																			},
																			"nativeSrc": "283:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "283:18:1"
																		},
																		"nativeSrc": "283:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "283:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "270:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "270:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "277:1:1",
																				"nodeType": "YulLiteral",
																				"src": "277:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "267:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "267:2:1"
																		},
																		"nativeSrc": "267:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "267:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "260:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "260:6:1"
																},
																"nativeSrc": "260:20:1",
																"nodeType": "YulFunctionCall",
																"src": "260:20:1"
															},
															"nativeSrc": "257:46:1",
															"nodeType": "YulIf",
															"src": "257:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Candidate_$5",
												"nativeSrc": "193:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "240:5:1",
														"nodeType": "YulTypedName",
														"src": "240:5:1",
														"type": ""
													}
												],
												"src": "193:116:1"
											},
											{
												"body": {
													"nativeSrc": "371:77:1",
													"nodeType": "YulBlock",
													"src": "371:77:1",
													"statements": [
														{
															"nativeSrc": "381:16:1",
															"nodeType": "YulAssignment",
															"src": "381:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "392:5:1",
																"nodeType": "YulIdentifier",
																"src": "392:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "381:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "381:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "436:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "436:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Candidate_$5",
																	"nativeSrc": "398:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "398:37:1"
																},
																"nativeSrc": "398:44:1",
																"nodeType": "YulFunctionCall",
																"src": "398:44:1"
															},
															"nativeSrc": "398:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "398:44:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Candidate_$5",
												"nativeSrc": "315:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "353:5:1",
														"nodeType": "YulTypedName",
														"src": "353:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "363:7:1",
														"nodeType": "YulTypedName",
														"src": "363:7:1",
														"type": ""
													}
												],
												"src": "315:133:1"
											},
											{
												"body": {
													"nativeSrc": "523:64:1",
													"nodeType": "YulBlock",
													"src": "523:64:1",
													"statements": [
														{
															"nativeSrc": "533:48:1",
															"nodeType": "YulAssignment",
															"src": "533:48:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "575:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "575:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Candidate_$5",
																	"nativeSrc": "546:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "546:28:1"
																},
																"nativeSrc": "546:35:1",
																"nodeType": "YulFunctionCall",
																"src": "546:35:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "533:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "533:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Candidate_$5_to_t_uint8",
												"nativeSrc": "454:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "503:5:1",
														"nodeType": "YulTypedName",
														"src": "503:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "513:9:1",
														"nodeType": "YulTypedName",
														"src": "513:9:1",
														"type": ""
													}
												],
												"src": "454:133:1"
											},
											{
												"body": {
													"nativeSrc": "667:75:1",
													"nodeType": "YulBlock",
													"src": "667:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "684:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "684:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "729:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "729:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Candidate_$5_to_t_uint8",
																			"nativeSrc": "689:39:1",
																			"nodeType": "YulIdentifier",
																			"src": "689:39:1"
																		},
																		"nativeSrc": "689:46:1",
																		"nodeType": "YulFunctionCall",
																		"src": "689:46:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "677:6:1"
																},
																"nativeSrc": "677:59:1",
																"nodeType": "YulFunctionCall",
																"src": "677:59:1"
															},
															"nativeSrc": "677:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "677:59:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Candidate_$5_to_t_uint8_fromStack",
												"nativeSrc": "593:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "655:5:1",
														"nodeType": "YulTypedName",
														"src": "655:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "662:3:1",
														"nodeType": "YulTypedName",
														"src": "662:3:1",
														"type": ""
													}
												],
												"src": "593:149:1"
											},
											{
												"body": {
													"nativeSrc": "793:32:1",
													"nodeType": "YulBlock",
													"src": "793:32:1",
													"statements": [
														{
															"nativeSrc": "803:16:1",
															"nodeType": "YulAssignment",
															"src": "803:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "814:5:1",
																"nodeType": "YulIdentifier",
																"src": "814:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "803:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "803:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "748:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "775:5:1",
														"nodeType": "YulTypedName",
														"src": "775:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "785:7:1",
														"nodeType": "YulTypedName",
														"src": "785:7:1",
														"type": ""
													}
												],
												"src": "748:77:1"
											},
											{
												"body": {
													"nativeSrc": "896:53:1",
													"nodeType": "YulBlock",
													"src": "896:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "913:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "913:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "936:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "936:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "918:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "918:17:1"
																		},
																		"nativeSrc": "918:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "918:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "906:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "906:6:1"
																},
																"nativeSrc": "906:37:1",
																"nodeType": "YulFunctionCall",
																"src": "906:37:1"
															},
															"nativeSrc": "906:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "906:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "831:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "884:5:1",
														"nodeType": "YulTypedName",
														"src": "884:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "891:3:1",
														"nodeType": "YulTypedName",
														"src": "891:3:1",
														"type": ""
													}
												],
												"src": "831:118:1"
											},
											{
												"body": {
													"nativeSrc": "1090:215:1",
													"nodeType": "YulBlock",
													"src": "1090:215:1",
													"statements": [
														{
															"nativeSrc": "1100:26:1",
															"nodeType": "YulAssignment",
															"src": "1100:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1112:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1112:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1123:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1123:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:1"
																},
																"nativeSrc": "1108:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1108:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1100:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1189:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1202:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1202:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1213:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1213:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1198:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1198:3:1"
																		},
																		"nativeSrc": "1198:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1198:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Candidate_$5_to_t_uint8_fromStack",
																	"nativeSrc": "1136:52:1",
																	"nodeType": "YulIdentifier",
																	"src": "1136:52:1"
																},
																"nativeSrc": "1136:80:1",
																"nodeType": "YulFunctionCall",
																"src": "1136:80:1"
															},
															"nativeSrc": "1136:80:1",
															"nodeType": "YulExpressionStatement",
															"src": "1136:80:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1270:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1283:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1294:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1294:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1279:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1279:3:1"
																		},
																		"nativeSrc": "1279:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1279:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1226:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1226:43:1"
																},
																"nativeSrc": "1226:72:1",
																"nodeType": "YulFunctionCall",
																"src": "1226:72:1"
															},
															"nativeSrc": "1226:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "1226:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Candidate_$5_t_uint256__to_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "955:350:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1054:9:1",
														"nodeType": "YulTypedName",
														"src": "1054:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1066:6:1",
														"nodeType": "YulTypedName",
														"src": "1066:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1074:6:1",
														"nodeType": "YulTypedName",
														"src": "1074:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1085:4:1",
														"nodeType": "YulTypedName",
														"src": "1085:4:1",
														"type": ""
													}
												],
												"src": "955:350:1"
											},
											{
												"body": {
													"nativeSrc": "1351:35:1",
													"nodeType": "YulBlock",
													"src": "1351:35:1",
													"statements": [
														{
															"nativeSrc": "1361:19:1",
															"nodeType": "YulAssignment",
															"src": "1361:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1377:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1371:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1371:5:1"
																},
																"nativeSrc": "1371:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1371:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1361:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1311:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1344:6:1",
														"nodeType": "YulTypedName",
														"src": "1344:6:1",
														"type": ""
													}
												],
												"src": "1311:75:1"
											},
											{
												"body": {
													"nativeSrc": "1481:28:1",
													"nodeType": "YulBlock",
													"src": "1481:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1491:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nativeSrc": "1491:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1491:12:1"
															},
															"nativeSrc": "1491:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1491:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1392:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1392:117:1"
											},
											{
												"body": {
													"nativeSrc": "1604:28:1",
													"nodeType": "YulBlock",
													"src": "1604:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1621:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1624:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1624:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1614:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1614:6:1"
																},
																"nativeSrc": "1614:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1614:12:1"
															},
															"nativeSrc": "1614:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1614:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1515:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1515:117:1"
											},
											{
												"body": {
													"nativeSrc": "1692:56:1",
													"nodeType": "YulBlock",
													"src": "1692:56:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1726:16:1",
																"nodeType": "YulBlock",
																"src": "1726:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1735:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1738:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1738:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1728:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1728:6:1"
																			},
																			"nativeSrc": "1728:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1728:12:1"
																		},
																		"nativeSrc": "1728:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1715:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1715:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1722:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1722:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1712:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1712:2:1"
																		},
																		"nativeSrc": "1712:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1712:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:1"
																},
																"nativeSrc": "1705:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1705:20:1"
															},
															"nativeSrc": "1702:40:1",
															"nodeType": "YulIf",
															"src": "1702:40:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_Candidate_$5",
												"nativeSrc": "1638:110:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1685:5:1",
														"nodeType": "YulTypedName",
														"src": "1685:5:1",
														"type": ""
													}
												],
												"src": "1638:110:1"
											},
											{
												"body": {
													"nativeSrc": "1817:98:1",
													"nodeType": "YulBlock",
													"src": "1817:98:1",
													"statements": [
														{
															"nativeSrc": "1827:29:1",
															"nodeType": "YulAssignment",
															"src": "1827:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1849:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1836:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1836:12:1"
																},
																"nativeSrc": "1836:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1836:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1827:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1827:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1903:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1903:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Candidate_$5",
																	"nativeSrc": "1865:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1865:37:1"
																},
																"nativeSrc": "1865:44:1",
																"nodeType": "YulFunctionCall",
																"src": "1865:44:1"
															},
															"nativeSrc": "1865:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "1865:44:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_Candidate_$5",
												"nativeSrc": "1754:161:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1795:6:1",
														"nodeType": "YulTypedName",
														"src": "1795:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1803:3:1",
														"nodeType": "YulTypedName",
														"src": "1803:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1811:5:1",
														"nodeType": "YulTypedName",
														"src": "1811:5:1",
														"type": ""
													}
												],
												"src": "1754:161:1"
											},
											{
												"body": {
													"nativeSrc": "1998:274:1",
													"nodeType": "YulBlock",
													"src": "1998:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2044:83:1",
																"nodeType": "YulBlock",
																"src": "2044:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2046:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2046:77:1"
																			},
																			"nativeSrc": "2046:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2046:79:1"
																		},
																		"nativeSrc": "2046:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2019:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2019:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2028:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2028:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:1"
																		},
																		"nativeSrc": "2015:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2011:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:1"
																},
																"nativeSrc": "2011:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:32:1"
															},
															"nativeSrc": "2008:119:1",
															"nodeType": "YulIf",
															"src": "2008:119:1"
														},
														{
															"nativeSrc": "2137:128:1",
															"nodeType": "YulBlock",
															"src": "2137:128:1",
															"statements": [
																{
																	"nativeSrc": "2152:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2152:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2166:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2156:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2156:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2181:74:1",
																	"nodeType": "YulAssignment",
																	"src": "2181:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2227:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2227:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2238:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2238:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2223:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2223:3:1"
																				},
																				"nativeSrc": "2223:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2223:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2247:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2247:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Candidate_$5",
																			"nativeSrc": "2191:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "2191:31:1"
																		},
																		"nativeSrc": "2191:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2181:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2181:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Candidate_$5",
												"nativeSrc": "1921:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1968:9:1",
														"nodeType": "YulTypedName",
														"src": "1968:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1979:7:1",
														"nodeType": "YulTypedName",
														"src": "1979:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1991:6:1",
														"nodeType": "YulTypedName",
														"src": "1991:6:1",
														"type": ""
													}
												],
												"src": "1921:351:1"
											},
											{
												"body": {
													"nativeSrc": "2306:152:1",
													"nodeType": "YulBlock",
													"src": "2306:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2326:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2326:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2316:6:1"
																},
																"nativeSrc": "2316:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2316:88:1"
															},
															"nativeSrc": "2316:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2316:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2420:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2420:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2423:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2423:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:1"
																},
																"nativeSrc": "2413:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2413:15:1"
															},
															"nativeSrc": "2413:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2413:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2444:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2447:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2447:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2437:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:1"
																},
																"nativeSrc": "2437:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2437:15:1"
															},
															"nativeSrc": "2437:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2437:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2278:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2278:180:1"
											},
											{
												"body": {
													"nativeSrc": "2508:147:1",
													"nodeType": "YulBlock",
													"src": "2508:147:1",
													"statements": [
														{
															"nativeSrc": "2518:25:1",
															"nodeType": "YulAssignment",
															"src": "2518:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2541:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2541:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2523:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2523:17:1"
																},
																"nativeSrc": "2523:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2523:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2518:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2518:1:1"
																}
															]
														},
														{
															"nativeSrc": "2552:25:1",
															"nodeType": "YulAssignment",
															"src": "2552:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2575:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2575:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2557:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2557:17:1"
																},
																"nativeSrc": "2557:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2557:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2552:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2552:1:1"
																}
															]
														},
														{
															"nativeSrc": "2586:16:1",
															"nodeType": "YulAssignment",
															"src": "2586:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2597:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2597:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2600:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2600:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2593:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2593:3:1"
																},
																"nativeSrc": "2593:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2593:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2586:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2586:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2626:22:1",
																"nodeType": "YulBlock",
																"src": "2626:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2628:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2628:16:1"
																			},
																			"nativeSrc": "2628:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2628:18:1"
																		},
																		"nativeSrc": "2628:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2628:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2618:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2618:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2621:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2621:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2615:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2615:2:1"
																},
																"nativeSrc": "2615:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2615:10:1"
															},
															"nativeSrc": "2612:36:1",
															"nodeType": "YulIf",
															"src": "2612:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2464:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2495:1:1",
														"nodeType": "YulTypedName",
														"src": "2495:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2498:1:1",
														"nodeType": "YulTypedName",
														"src": "2498:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2504:3:1",
														"nodeType": "YulTypedName",
														"src": "2504:3:1",
														"type": ""
													}
												],
												"src": "2464:191:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Candidate_$5(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Candidate_$5(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Candidate_$5(value)\n    }\n\n    function convert_t_enum$_Candidate_$5_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Candidate_$5(value)\n    }\n\n    function abi_encode_t_enum$_Candidate_$5_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Candidate_$5_to_t_uint8(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Candidate_$5_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Candidate_$5_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_Candidate_$5(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Candidate_$5(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Candidate_$5(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Candidate_$5(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Candidate_$5(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c80634717f97c1461002c578063b3f98adc14610057575b5f5ffd5b348015610037575f5ffd5b50610040610073565b60405161004e9291906102e7565b60405180910390f35b610071600480360381019061006c9190610335565b610187565b005b5f5f5f60015f5f600281111561008c5761008b61025c565b5b600281111561009e5761009d61025c565b5b81526020019081526020015f205490505f60015f600160028111156100c6576100c561025c565b5b60028111156100d8576100d761025c565b5b81526020019081526020015f205490505f60015f6002808111156100ff576100fe61025c565b5b60028111156101115761011061025c565b5b81526020019081526020015f205490505f5f90505f8490508084111561013957600191508390505b8083111561014957600291508290505b818160405160200161015c9291906102e7565b6040516020818303038152906040528051906020012060028190555081819650965050505050509091565b600115155f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515146101df575f5ffd5b6001805f8360028111156101f6576101f561025c565b5b60028111156102085761020761025c565b5b81526020019081526020015f2054610220919061038d565b60015f8360028111156102365761023561025c565b5b60028111156102485761024761025c565b5b81526020019081526020015f208190555050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6003811061029a5761029961025c565b5b50565b5f8190506102aa82610289565b919050565b5f6102b98261029d565b9050919050565b6102c9816102af565b82525050565b5f819050919050565b6102e1816102cf565b82525050565b5f6040820190506102fa5f8301856102c0565b61030760208301846102d8565b9392505050565b5f5ffd5b6003811061031e575f5ffd5b50565b5f8135905061032f81610312565b92915050565b5f6020828403121561034a5761034961030e565b5b5f61035784828501610321565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610397826102cf565b91506103a2836102cf565b92508282019050808211156103ba576103b9610360565b5b9291505056fea26469706673582212205311b4054bbcc51d1afffb7f34090e8ead0889e192287c6439432c6a595c11b464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4717F97C EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E SWAP3 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x1 PUSH0 PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8C JUMPI PUSH2 0x8B PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9E JUMPI PUSH2 0x9D PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC6 JUMPI PUSH2 0xC5 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x111 JUMPI PUSH2 0x110 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 DUP5 SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x139 JUMPI PUSH1 0x1 SWAP2 POP DUP4 SWAP1 POP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x149 JUMPI PUSH1 0x2 SWAP2 POP DUP3 SWAP1 POP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15C SWAP3 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 DUP2 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x236 JUMPI PUSH2 0x235 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x248 JUMPI PUSH2 0x247 PUSH2 0x25C JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x25C JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2AA DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9 DUP3 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x2AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1 DUP2 PUSH2 0x2CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FA PUSH0 DUP4 ADD DUP6 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x31E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32F DUP2 PUSH2 0x312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0x30E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x357 DUP5 DUP3 DUP6 ADD PUSH2 0x321 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x397 DUP3 PUSH2 0x2CF JUMP JUMPDEST SWAP2 POP PUSH2 0x3A2 DUP4 PUSH2 0x2CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3BA JUMPI PUSH2 0x3B9 PUSH2 0x360 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 GT 0xB4 SDIV 0x4B 0xBC 0xC5 SAR BYTE SELFDESTRUCT EXTSTATICCALL PUSH32 0x34090E8EAD0889E192287C6439432C6A595C11B464736F6C634300081E003300 ",
							"sourceMap": "75:1085:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;496:661;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;373:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;496:661;533:9;544:4;560:15;578:5;:19;584:12;578:19;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;560:37;;608:15;626:5;:19;632:12;626:19;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;608:37;;656:15;674:5;:19;680:12;674:19;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;656:37;;706:16;725:12;706:31;;748:17;768:10;748:30;;808:12;795:10;:25;791:119;;;846:12;837:21;;888:10;873:25;;791:119;937:12;924:10;:25;920:119;;;975:12;966:21;;1017:10;1002:25;;920:119;1087:6;1095:12;1076:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1066:43;;;;;;1051:12;:58;;;;1128:6;1136:12;1120:29;;;;;;;;;496:661;;:::o;373:115::-;341:4;311:34;;:14;:26;326:10;311:26;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;303:43;;;;;;479:1:::1;462:5:::0;:16:::1;468:9;462:16;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:18;;;;:::i;:::-;445:5;:16;451:9;445:16;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;373:115:::0;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:116;277:1;270:5;267:12;257:46;;283:18;;:::i;:::-;257:46;193:116;:::o;315:133::-;363:7;392:5;381:16;;398:44;436:5;398:44;:::i;:::-;315:133;;;:::o;454:::-;513:9;546:35;575:5;546:35;:::i;:::-;533:48;;454:133;;;:::o;593:149::-;689:46;729:5;689:46;:::i;:::-;684:3;677:59;593:149;;:::o;748:77::-;785:7;814:5;803:16;;748:77;;;:::o;831:118::-;918:24;936:5;918:24;:::i;:::-;913:3;906:37;831:118;;:::o;955:350::-;1085:4;1123:2;1112:9;1108:18;1100:26;;1136:80;1213:1;1202:9;1198:17;1189:6;1136:80;:::i;:::-;1226:72;1294:2;1283:9;1279:18;1270:6;1226:72;:::i;:::-;955:350;;;;;:::o;1392:117::-;1501:1;1498;1491:12;1638:110;1722:1;1715:5;1712:12;1702:40;;1738:1;1735;1728:12;1702:40;1638:110;:::o;1754:161::-;1811:5;1849:6;1836:20;1827:29;;1865:44;1903:5;1865:44;:::i;:::-;1754:161;;;;:::o;1921:351::-;1991:6;2040:2;2028:9;2019:7;2015:23;2011:32;2008:119;;;2046:79;;:::i;:::-;2008:119;2166:1;2191:64;2247:7;2238:6;2227:9;2223:22;2191:64;:::i;:::-;2181:74;;2137:128;1921:351;;;;:::o;2278:180::-;2326:77;2323:1;2316:88;2423:4;2420:1;2413:15;2447:4;2444:1;2437:15;2464:191;2504:3;2523:20;2541:1;2523:20;:::i;:::-;2518:25;;2557:20;2575:1;2557:20;:::i;:::-;2552:25;;2600:1;2597;2593:9;2586:16;;2621:3;2618:1;2615:10;2612:36;;;2628:18;;:::i;:::-;2612:36;2464:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "202800",
								"executionCost": "243",
								"totalCost": "203043"
							},
							"external": {
								"getResults()": "infinite",
								"vote(uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 1160,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205311b4054bbcc51d1afffb7f34090e8ead0889e192287c6439432c6a595c11b464736f6c634300081e0033",
									".code": [
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "4717F97C"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "B3F98ADC"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 1160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 496,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 496,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 373,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 578,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 578,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 578,
											"end": 597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 560,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 626,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 626,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 674,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 674,
											"end": 693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 656,
											"end": 693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 778,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 748,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 795,
											"end": 820,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 791,
											"end": 910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 791,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 791,
											"end": 910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 846,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 837,
											"end": 858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 873,
											"end": 898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 910,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 791,
											"end": 910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 937,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 924,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 924,
											"end": 949,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 975,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1076,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 373,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 311,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 311,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 311,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 336,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 311,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 311,
											"end": 337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 311,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 311,
											"end": 345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 311,
											"end": 345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 303,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 303,
											"end": 346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 303,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 303,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 477,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 462,
											"end": 478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 462,
											"end": 480,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 462,
											"end": 480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 462,
											"end": 480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 460,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 461,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 461,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 461,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 445,
											"end": 480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 480,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 480,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 193,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 270,
											"end": 275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 257,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 257,
											"end": 303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 283,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 283,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 283,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 283,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 283,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 303,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 257,
											"end": 303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 315,
											"end": 448,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 315,
											"end": 448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 363,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 381,
											"end": 397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 381,
											"end": 397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 398,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 398,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 398,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 398,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 398,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 315,
											"end": 448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 315,
											"end": 448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 315,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 454,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 575,
											"end": 580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 546,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 546,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 546,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 454,
											"end": 587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 454,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 742,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 593,
											"end": 742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 689,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 689,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 689,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 689,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 677,
											"end": 736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 593,
											"end": 742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 825,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 748,
											"end": 825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 785,
											"end": 792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 803,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 803,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 831,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 936,
											"end": 941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 918,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 918,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 918,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 918,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 906,
											"end": 943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 831,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1136,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1216,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1136,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1294,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1226,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1226,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1715,
											"end": 1720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1724,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1702,
											"end": 1742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1702,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1915,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1754,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1856,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1903,
											"end": 1908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1865,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1921,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2046,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2046,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2008,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2191,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2255,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2191,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2458,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2278,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2403,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2413,
											"end": 2428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2655,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2464,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2523,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2543,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2523,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2575,
											"end": 2576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2557,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2557,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2577,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2625,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2648,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2612,
											"end": 2648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2628,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2612,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"elections.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getResults()": "4717f97c",
							"vote(uint8)": "b3f98adc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getResults\",\"outputs\":[{\"internalType\":\"enum Elections.Candidate\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Elections.Candidate\",\"name\":\"candidate\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"elections.sol\":\"Elections\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"elections.sol\":{\"keccak256\":\"0x0b4d4d89076138be6790887ff6fc7341095aff5c76735399ef1601a77714e7e6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://377887e1f2c0a1d5501abd9d32affb1fa5bfa8bf94a35f4b56d8bb587e694dc4\",\"dweb:/ipfs/QmabJPVJZMachRSHu9kEZ5o1NG2JybkUR2kZCHquwwPheo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "elections.sol:Elections",
								"label": "approvedVoters",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 14,
								"contract": "elections.sol:Elections",
								"label": "votes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(Candidate)5,t_uint256)"
							},
							{
								"astId": 16,
								"contract": "elections.sol:Elections",
								"label": "hashedResult",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Candidate)5": {
								"encoding": "inplace",
								"label": "enum Elections.Candidate",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_enum(Candidate)5,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(Candidate)5",
								"label": "mapping(enum Elections.Candidate => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"elections.sol": {
				"ast": {
					"absolutePath": "elections.sol",
					"exportedSymbols": {
						"Elections": [
							131
						]
					},
					"id": 132,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Elections",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "Elections",
							"nameLocation": "84:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Elections.Candidate",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "C1",
											"nameLocation": "118:2:0",
											"nodeType": "EnumValue",
											"src": "118:2:0"
										},
										{
											"id": 3,
											"name": "C2",
											"nameLocation": "122:2:0",
											"nodeType": "EnumValue",
											"src": "122:2:0"
										},
										{
											"id": 4,
											"name": "C3",
											"nameLocation": "126:2:0",
											"nodeType": "EnumValue",
											"src": "126:2:0"
										}
									],
									"name": "Candidate",
									"nameLocation": "106:9:0",
									"nodeType": "EnumDefinition",
									"src": "101:29:0"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "approvedVoters",
									"nameLocation": "167:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "136:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "144:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "136:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "153:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "votes",
									"nameLocation": "221:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "188:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
										"typeString": "mapping(enum Elections.Candidate => uint256)"
									},
									"typeName": {
										"id": 13,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 11,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 10,
												"name": "Candidate",
												"nameLocations": [
													"196:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5,
												"src": "196:9:0"
											},
											"referencedDeclaration": 5,
											"src": "196:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Candidate_$5",
												"typeString": "enum Elections.Candidate"
											}
										},
										"nodeType": "Mapping",
										"src": "188:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
											"typeString": "mapping(enum Elections.Candidate => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 12,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "207:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "hashedResult",
									"nameLocation": "249:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "233:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "292:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 19,
																	"name": "approvedVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "311:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 22,
																"indexExpression": {
																	"expression": {
																		"id": 20,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "326:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "330:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "326:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "311:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "341:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "311:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "303:43:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "353:1:0"
											}
										]
									},
									"id": 29,
									"name": "isApproved",
									"nameLocation": "279:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:0"
									},
									"src": "270:95:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "434:54:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 37,
															"name": "votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "445:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
																"typeString": "mapping(enum Elections.Candidate => uint256)"
															}
														},
														"id": 39,
														"indexExpression": {
															"id": 38,
															"name": "candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "451:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Candidate_$5",
																"typeString": "enum Elections.Candidate"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "445:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 40,
																"name": "votes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "462:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
																	"typeString": "mapping(enum Elections.Candidate => uint256)"
																}
															},
															"id": 42,
															"indexExpression": {
																"id": 41,
																"name": "candidate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "468:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Candidate_$5",
																	"typeString": "enum Elections.Candidate"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "462:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "479:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "462:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "445:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "445:35:0"
											}
										]
									},
									"functionSelector": "b3f98adc",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 35,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 34,
												"name": "isApproved",
												"nameLocations": [
													"423:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "423:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "423:10:0"
										}
									],
									"name": "vote",
									"nameLocation": "382:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "397:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "387:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Candidate_$5",
													"typeString": "enum Elections.Candidate"
												},
												"typeName": {
													"id": 31,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 30,
														"name": "Candidate",
														"nameLocations": [
															"387:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "387:9:0"
													},
													"referencedDeclaration": 5,
													"src": "387:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Candidate_$5",
														"typeString": "enum Elections.Candidate"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:21:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:0:0"
									},
									"scope": 131,
									"src": "373:115:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "549:608:0",
										"statements": [
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "votesForC1",
														"nameLocation": "565:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "560:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 56,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "560:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"baseExpression": {
														"id": 58,
														"name": "votes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "578:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
															"typeString": "mapping(enum Elections.Candidate => uint256)"
														}
													},
													"id": 61,
													"indexExpression": {
														"expression": {
															"id": 59,
															"name": "Candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "584:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Candidate_$5_$",
																"typeString": "type(enum Elections.Candidate)"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "594:2:0",
														"memberName": "C1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "584:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Candidate_$5",
															"typeString": "enum Elections.Candidate"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "578:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "560:37:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "votesForC2",
														"nameLocation": "613:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "608:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "608:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"baseExpression": {
														"id": 65,
														"name": "votes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "626:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
															"typeString": "mapping(enum Elections.Candidate => uint256)"
														}
													},
													"id": 68,
													"indexExpression": {
														"expression": {
															"id": 66,
															"name": "Candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "632:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Candidate_$5_$",
																"typeString": "type(enum Elections.Candidate)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "642:2:0",
														"memberName": "C2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "632:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Candidate_$5",
															"typeString": "enum Elections.Candidate"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "626:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "608:37:0"
											},
											{
												"assignments": [
													71
												],
												"declarations": [
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "votesForC3",
														"nameLocation": "661:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "656:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 70,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "656:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"baseExpression": {
														"id": 72,
														"name": "votes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "674:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_Candidate_$5_$_t_uint256_$",
															"typeString": "mapping(enum Elections.Candidate => uint256)"
														}
													},
													"id": 75,
													"indexExpression": {
														"expression": {
															"id": 73,
															"name": "Candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "680:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Candidate_$5_$",
																"typeString": "type(enum Elections.Candidate)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "690:2:0",
														"memberName": "C3",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "680:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Candidate_$5",
															"typeString": "enum Elections.Candidate"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "674:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "656:37:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"mutability": "mutable",
														"name": "winner",
														"nameLocation": "716:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "706:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Candidate_$5",
															"typeString": "enum Elections.Candidate"
														},
														"typeName": {
															"id": 78,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 77,
																"name": "Candidate",
																"nameLocations": [
																	"706:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "706:9:0"
															},
															"referencedDeclaration": 5,
															"src": "706:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Candidate_$5",
																"typeString": "enum Elections.Candidate"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"expression": {
														"id": 80,
														"name": "Candidate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "725:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Candidate_$5_$",
															"typeString": "type(enum Elections.Candidate)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "735:2:0",
													"memberName": "C1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2,
													"src": "725:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Candidate_$5",
														"typeString": "enum Elections.Candidate"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "706:31:0"
											},
											{
												"assignments": [
													84
												],
												"declarations": [
													{
														"constant": false,
														"id": 84,
														"mutability": "mutable",
														"name": "winningVotes",
														"nameLocation": "753:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "748:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 83,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"id": 85,
													"name": "votesForC1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "768:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "748:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 87,
														"name": "votesForC2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "795:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 88,
														"name": "winningVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "808:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "795:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "791:119:0",
												"trueBody": {
													"id": 99,
													"nodeType": "Block",
													"src": "822:88:0",
													"statements": [
														{
															"expression": {
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "837:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Candidate_$5",
																		"typeString": "enum Elections.Candidate"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 91,
																		"name": "Candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "846:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Candidate_$5_$",
																			"typeString": "type(enum Elections.Candidate)"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "856:2:0",
																	"memberName": "C2",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "846:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Candidate_$5",
																		"typeString": "enum Elections.Candidate"
																	}
																},
																"src": "837:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Candidate_$5",
																	"typeString": "enum Elections.Candidate"
																}
															},
															"id": 94,
															"nodeType": "ExpressionStatement",
															"src": "837:21:0"
														},
														{
															"expression": {
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 95,
																	"name": "winningVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "873:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 96,
																	"name": "votesForC2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "888:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "873:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 98,
															"nodeType": "ExpressionStatement",
															"src": "873:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 101,
														"name": "votesForC3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "924:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 102,
														"name": "winningVotes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "937:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "924:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 114,
												"nodeType": "IfStatement",
												"src": "920:119:0",
												"trueBody": {
													"id": 113,
													"nodeType": "Block",
													"src": "951:88:0",
													"statements": [
														{
															"expression": {
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 104,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "966:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Candidate_$5",
																		"typeString": "enum Elections.Candidate"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 105,
																		"name": "Candidate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "975:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Candidate_$5_$",
																			"typeString": "type(enum Elections.Candidate)"
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "985:2:0",
																	"memberName": "C3",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "975:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Candidate_$5",
																		"typeString": "enum Elections.Candidate"
																	}
																},
																"src": "966:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Candidate_$5",
																	"typeString": "enum Elections.Candidate"
																}
															},
															"id": 108,
															"nodeType": "ExpressionStatement",
															"src": "966:21:0"
														},
														{
															"expression": {
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 109,
																	"name": "winningVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "1002:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 110,
																	"name": "votesForC3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "1017:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1002:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 112,
															"nodeType": "ExpressionStatement",
															"src": "1002:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "hashedResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1051:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 119,
																		"name": "winner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "1087:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Candidate_$5",
																			"typeString": "enum Elections.Candidate"
																		}
																	},
																	{
																		"id": 120,
																		"name": "winningVotes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "1095:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_Candidate_$5",
																			"typeString": "enum Elections.Candidate"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 117,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1080:6:0",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "1076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1076:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 116,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1066:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1066:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1051:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1051:58:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 125,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1128:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Candidate_$5",
																"typeString": "enum Elections.Candidate"
															}
														},
														{
															"id": 126,
															"name": "winningVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1136:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 127,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1127:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_enum$_Candidate_$5_$_t_uint256_$",
														"typeString": "tuple(enum Elections.Candidate,uint256)"
													}
												},
												"functionReturnParameters": 55,
												"id": 128,
												"nodeType": "Return",
												"src": "1120:29:0"
											}
										]
									},
									"functionSelector": "4717f97c",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getResults",
									"nameLocation": "505:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "533:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Candidate_$5",
													"typeString": "enum Elections.Candidate"
												},
												"typeName": {
													"id": 51,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 50,
														"name": "Candidate",
														"nameLocations": [
															"533:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "533:9:0"
													},
													"referencedDeclaration": 5,
													"src": "533:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Candidate_$5",
														"typeString": "enum Elections.Candidate"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "544:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:17:0"
									},
									"scope": 131,
									"src": "496:661:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "75:1085:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1121:0"
				},
				"id": 0
			}
		}
	}
}